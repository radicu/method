{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "filters_1", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_1", "default": null, "conditions": [], "min_value": 2, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "filters_2", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "kernel_size_2", "default": null, "conditions": [], "min_value": 2, "max_value": 5, "step": 1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "lstm_units", "default": null, "conditions": [], "min_value": 32, "max_value": 256, "step": 32, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"filters_1": 64, "kernel_size_1": 2, "filters_2": 224, "kernel_size_2": 5, "lstm_units": 96, "dropout_rate": 0.1, "learning_rate": 0.005109402977211242}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"CNN_LSTM_V6.py\", line 91, in <lambda>\n    lambda hp: build_model(hp, input_shape=input_shape),\n  File \"CNN_LSTM_V6.py\", line 47, in build_model\n    model.add(Conv1D(\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\tensorflow\\python\\trackable\\base.py\", line 204, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\radik\\miniconda3\\envs\\method\\lib\\site-packages\\keras\\src\\layers\\convolutional\\base_conv.py\", line 354, in compute_output_shape\n    raise ValueError(\nValueError: One of the dimensions in the output is <= 0 due to downsampling in conv1d_1. Consider increasing the input size. Received input shape [None, 3, 64] which would produce output shape with a zero or negative value in a dimension.\n"}